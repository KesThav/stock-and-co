schema {
  query: Query
  mutation: Mutation
}

"""All queries"""
type Query {
  """List all orders"""
  orders: [Order]
  """A single order"""
  order(_id: String): Order
  """Get orders by user"""
  orderByUser(userid: String): [Order]
  """Get orders by product"""
  orderByProduct(productid: String): [Order]
}

"""This represents an order"""
type Order {
  userid: String
  products: [productOrder]
  total: Float
  status: String
  _id: String
  type: String
}

"""This represents a product saved in order"""
type productOrder {
  productid: String
  price: Float
  quantity: Int
}

"""All mutations"""
type Mutation {
  """create order"""
  createOrder(userid: String!, products: [productOrderInput!], total: Int!, status: String!): Order
  """update order status"""
  updateOrderStatus(_id: String!, status: String!): Order
  """Start order with camunda"""
  startOrder(userid: String, order: OrderInput, ptype: String): returnMessage
}

"""This represents a product input"""
input productOrderInput {
  productid: String
  price: Float
  quantity: Int
}

"""this represents a return message"""
type returnMessage {
  message: String
}

"""This represents an order input for camunda"""
input OrderInput {
  userid: String
  products: [productOrderInput]
}